services:
  postgresql:
    container_name: postgresql
    image: postgres:17.5-bullseye
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ogd3
    networks:
      - ogd3-network
    volumes:
      - ./data/postgresql/ogd3:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    profiles:
      - production
      - developer

  valkey:
    container_name: valkey
    image: valkey/valkey:8.1.1-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./configs/valkey.conf:/configs/valkey.conf
      - ./data/valkey:/data
    command: valkey-server /configs/valkey.conf
    networks:
      - ogd3-network
    profiles:
      - production
      - developer

  app:
    container_name: app
    build:
      context: ./src/app
    working_dir: /src/app
    entrypoint: /src/app/entrypoint.sh
    volumes:
      - ./src/app:/src/app
      - ./configs/.env.app:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    ports:
      - "8000:8000"
    depends_on:
      postgresql:
        condition: service_started
      valkey:
        condition: service_started
    networks:
      - ogd3-network
    restart: unless-stopped
    profiles:
      - production
      - developer

  agent:
    container_name: agent
    build:
      context: ./src/agent
    working_dir: /src/agent
    entrypoint: /src/agent/entrypoint.sh
    volumes:
      - ./src/agent:/src/agent
      - ./configs/.env.agent:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    ports:
      - "8001:8000"
    networks:
      - ogd3-network
    restart: always
    profiles:
      - production

  bot:
    container_name: bot
    build:
      context: ./src/bot
    working_dir: /src/bot
    command: sh -c "python main.py"
    volumes:
      - ./src/bot:/src/bot
      - ./sounds:/src/sounds
      - ./configs/.env.bot:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    networks:
      - ogd3-network
    restart: always
    profiles:
      - production


networks:
  ogd3-network:
    driver: bridge